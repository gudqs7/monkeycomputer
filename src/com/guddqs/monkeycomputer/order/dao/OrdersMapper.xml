<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guddqs.monkeycomputer.order.dao.OrdersMapper">
	<resultMap id="BaseResultMap" type="orders">
		<id column="ID" property="id" jdbcType="OTHER" />
		<result column="ORDERNUM" property="ordernum" jdbcType="OTHER" />
		<result column="PAYNUM" property="paynum" jdbcType="OTHER" />
		<result column="USERID" property="userid" jdbcType="OTHER" />
		<result column="CREATETIME" property="createtime" jdbcType="OTHER" />
		<result column="SENDTIME" property="sendtime" jdbcType="OTHER" />
		<result column="PAYTIME" property="paytime" jdbcType="OTHER" />
		<result column="LOGISTICID" property="logisticid" jdbcType="OTHER" />
		<result column="TOTALPRICE" property="totalprice" jdbcType="OTHER" />
		<result column="STATE" property="state" jdbcType="OTHER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, ORDERNUM, PAYNUM, USERID, CREATETIME, SENDTIME, PAYTIME, LOGISTICID,
		TOTALPRICE,
		STATE
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="ordersExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from ORDERS
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from ORDERS
		where ID = #{id,jdbcType=OTHER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from ORDERS
		where ID = #{id,jdbcType=OTHER}
	</delete>
	<delete id="deleteByExample" parameterType="ordersExample">
		delete from ORDERS
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="orders">
		<selectKey resultType="int" order="BEFORE" keyProperty="id">
			select seq_monkey.nextval from dual
		</selectKey>
		insert into ORDERS (ID, ORDERNUM, PAYNUM,
		USERID, CREATETIME, SENDTIME,
		PAYTIME, LOGISTICID, TOTALPRICE,
		STATE)
		values (#{id,jdbcType=OTHER}, #{ordernum,jdbcType=OTHER},
		#{paynum,jdbcType=OTHER},
		#{userid,jdbcType=OTHER}, #{createtime,jdbcType=OTHER}, #{sendtime,jdbcType=OTHER},
		#{paytime,jdbcType=OTHER}, #{logisticid,jdbcType=OTHER},
		#{totalprice,jdbcType=OTHER},
		#{state,jdbcType=OTHER})
	</insert>
	<insert id="insertSelective" parameterType="orders">
		<selectKey resultType="int" order="BEFORE" keyProperty="id">
			select seq_monkey.nextval from dual
		</selectKey>
		insert into ORDERS
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="ordernum != null">
				ORDERNUM,
			</if>
			<if test="paynum != null">
				PAYNUM,
			</if>
			<if test="userid != null">
				USERID,
			</if>
			<if test="createtime != null">
				CREATETIME,
			</if>
			<if test="sendtime != null">
				SENDTIME,
			</if>
			<if test="paytime != null">
				PAYTIME,
			</if>
			<if test="logisticid != null">
				LOGISTICID,
			</if>
			<if test="totalprice != null">
				TOTALPRICE,
			</if>
			<if test="state != null">
				STATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=OTHER},
			</if>
			<if test="ordernum != null">
				#{ordernum,jdbcType=OTHER},
			</if>
			<if test="paynum != null">
				#{paynum,jdbcType=OTHER},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=OTHER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=OTHER},
			</if>
			<if test="sendtime != null">
				#{sendtime,jdbcType=OTHER},
			</if>
			<if test="paytime != null">
				#{paytime,jdbcType=OTHER},
			</if>
			<if test="logisticid != null">
				#{logisticid,jdbcType=OTHER},
			</if>
			<if test="totalprice != null">
				#{totalprice,jdbcType=OTHER},
			</if>
			<if test="state != null">
				#{state,jdbcType=OTHER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="ordersExample"
		resultType="java.lang.Integer">
		select count(*) from ORDERS
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ORDERS
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=OTHER},
			</if>
			<if test="record.ordernum != null">
				ORDERNUM = #{record.ordernum,jdbcType=OTHER},
			</if>
			<if test="record.paynum != null">
				PAYNUM = #{record.paynum,jdbcType=OTHER},
			</if>
			<if test="record.userid != null">
				USERID = #{record.userid,jdbcType=OTHER},
			</if>
			<if test="record.createtime != null">
				CREATETIME = #{record.createtime,jdbcType=OTHER},
			</if>
			<if test="record.sendtime != null">
				SENDTIME = #{record.sendtime,jdbcType=OTHER},
			</if>
			<if test="record.paytime != null">
				PAYTIME = #{record.paytime,jdbcType=OTHER},
			</if>
			<if test="record.logisticid != null">
				LOGISTICID = #{record.logisticid,jdbcType=OTHER},
			</if>
			<if test="record.totalprice != null">
				TOTALPRICE = #{record.totalprice,jdbcType=OTHER},
			</if>
			<if test="record.state != null">
				STATE = #{record.state,jdbcType=OTHER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ORDERS
		set ID = #{record.id,jdbcType=OTHER},
		ORDERNUM = #{record.ordernum,jdbcType=OTHER},
		PAYNUM = #{record.paynum,jdbcType=OTHER},
		USERID = #{record.userid,jdbcType=OTHER},
		CREATETIME = #{record.createtime,jdbcType=OTHER},
		SENDTIME = #{record.sendtime,jdbcType=OTHER},
		PAYTIME = #{record.paytime,jdbcType=OTHER},
		LOGISTICID = #{record.logisticid,jdbcType=OTHER},
		TOTALPRICE = #{record.totalprice,jdbcType=OTHER},
		STATE = #{record.state,jdbcType=OTHER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="orders">
		update ORDERS
		<set>
			<if test="ordernum != null">
				ORDERNUM = #{ordernum,jdbcType=OTHER},
			</if>
			<if test="paynum != null">
				PAYNUM = #{paynum,jdbcType=OTHER},
			</if>
			<if test="userid != null">
				USERID = #{userid,jdbcType=OTHER},
			</if>
			<if test="createtime != null">
				CREATETIME = #{createtime,jdbcType=OTHER},
			</if>
			<if test="sendtime != null">
				SENDTIME = #{sendtime,jdbcType=OTHER},
			</if>
			<if test="paytime != null">
				PAYTIME = #{paytime,jdbcType=OTHER},
			</if>
			<if test="logisticid != null">
				LOGISTICID = #{logisticid,jdbcType=OTHER},
			</if>
			<if test="totalprice != null">
				TOTALPRICE = #{totalprice,jdbcType=OTHER},
			</if>
			<if test="state != null">
				STATE = #{state,jdbcType=OTHER},
			</if>
		</set>
		where ID = #{id,jdbcType=OTHER}
	</update>
	<update id="updateByPrimaryKey" parameterType="orders">
		update ORDERS
		set ORDERNUM = #{ordernum,jdbcType=OTHER},
		PAYNUM = #{paynum,jdbcType=OTHER},
		USERID = #{userid,jdbcType=OTHER},
		CREATETIME = #{createtime,jdbcType=OTHER},
		SENDTIME = #{sendtime,jdbcType=OTHER},
		PAYTIME = #{paytime,jdbcType=OTHER},
		LOGISTICID = #{logisticid,jdbcType=OTHER},
		TOTALPRICE = #{totalprice,jdbcType=OTHER},
		STATE = #{state,jdbcType=OTHER}
		where ID = #{id,jdbcType=OTHER}
	</update>
</mapper>