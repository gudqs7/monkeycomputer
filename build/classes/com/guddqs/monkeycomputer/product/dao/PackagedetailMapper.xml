<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guddqs.monkeycomputer.product.dao.PackagedetailMapper" >
  <resultMap id="BaseResultMap" type="packagedetail" >
    <id column="ID" property="id" jdbcType="OTHER" />
    <result column="PACKAGEID" property="packageid" jdbcType="OTHER" />
    <result column="NAME" property="name" jdbcType="OTHER" />
    <result column="PRICE" property="price" jdbcType="OTHER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PACKAGEID, NAME, PRICE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="packagedetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PACKAGEDETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from PACKAGEDETAIL
    where ID = #{id,jdbcType=OTHER}
  </select>
  
  <select id="selectByPackageID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from PACKAGEDETAIL
    where PACKAGEID = #{id,jdbcType=OTHER}
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from PACKAGEDETAIL
    where ID = #{id,jdbcType=OTHER}
  </delete>
  <delete id="deleteByExample" parameterType="packagedetailExample" >
    delete from PACKAGEDETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="packagedetail" >
    <selectKey resultType="int" order="BEFORE" keyProperty="id">
    	select seq_monkey.nextval from dual
    </selectKey>
    insert into PACKAGEDETAIL (ID, PACKAGEID, NAME, 
      PRICE)
    values (#{id,jdbcType=OTHER}, #{packageid,jdbcType=OTHER}, #{name,jdbcType=OTHER}, 
      #{price,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" parameterType="packagedetail" >
    insert into PACKAGEDETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="packageid != null" >
        PACKAGEID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=OTHER},
      </if>
      <if test="packageid != null" >
        #{packageid,jdbcType=OTHER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=OTHER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="packagedetailExample" resultType="java.lang.Integer" >
    select count(*) from PACKAGEDETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PACKAGEDETAIL
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=OTHER},
      </if>
      <if test="record.packageid != null" >
        PACKAGEID = #{record.packageid,jdbcType=OTHER},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=OTHER},
      </if>
      <if test="record.price != null" >
        PRICE = #{record.price,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PACKAGEDETAIL
    set ID = #{record.id,jdbcType=OTHER},
      PACKAGEID = #{record.packageid,jdbcType=OTHER},
      NAME = #{record.name,jdbcType=OTHER},
      PRICE = #{record.price,jdbcType=OTHER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="packagedetail" >
    update PACKAGEDETAIL
    <set >
      <if test="packageid != null" >
        PACKAGEID = #{packageid,jdbcType=OTHER},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=OTHER},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=OTHER},
      </if>
    </set>
    where ID = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="packagedetail" >
    update PACKAGEDETAIL
    set PACKAGEID = #{packageid,jdbcType=OTHER},
      NAME = #{name,jdbcType=OTHER},
      PRICE = #{price,jdbcType=OTHER}
    where ID = #{id,jdbcType=OTHER}
  </update>
</mapper>