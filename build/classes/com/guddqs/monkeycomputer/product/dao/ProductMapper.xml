<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guddqs.monkeycomputer.product.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="product">
    <id column="ID" jdbcType="OTHER" property="id" />
    <result column="NAME" jdbcType="OTHER" property="name" />
    <result column="PRICE" jdbcType="OTHER" property="price" />
    <result column="STOCK" jdbcType="OTHER" property="stock" />
    <result column="PICTURE" jdbcType="OTHER" property="picture" />
    <result column="POINT" jdbcType="OTHER" property="point" />
    <result column="SIMPLEDESC" jdbcType="OTHER" property="simpledesc" />
    <result column="DETIALDESC" jdbcType="OTHER" property="detialdesc" />
    <result column="TYPEID" jdbcType="OTHER" property="typeid" />
    <result column="STATE" jdbcType="OTHER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, NAME, PRICE, STOCK, PICTURE, POINT, SIMPLEDESC, DETIALDESC, TYPEID, STATE
  </sql>
  
  
  
  <!-- <select id="selectByExample" parameterType="productExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PRODUCT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select> -->
  
  <resultMap type="product" id="productMap" extends="BaseResultMap">
  	
  	<association property="producttype" javaType="productttype">
  		<id column="tid" property="id"/>
  		<result column="tname" property="name"/>
  		<result column="parentid" property="parentid"/>
  	</association>
  	
  	<association property="productpackage" javaType="productpackage">
  		<id column="paid" property="id"/>
  		<result column="productid" property="productid"/>
  		<result column="defaultid" property="defaultid"/>
  		
  		<collection property="packagedetails" ofType="packagedetail" 
  		select="com.guddqs.monkeycomputer.product.dao.PackagedetailMapper.selectByPackageID" column="paid">
  			<!-- <id column="did" property="id"/>
  			<result column="packageid" property="packageid"/>
  			<result column="dprice" property="price"/>
  			<result column="dname" property="name"/> -->
  		</collection>
  		
  	</association>
  	
  </resultMap>
  
  <select id="selectByExample" parameterType="productExample" resultMap="productMap">
    select 
	  p.*,pa.id paid ,pa.productid,pa.defaultid,d.id did,t.id tid,t.name tname,t.parentid
	from product p
	 left outer join productpackage pa
	on p.id=pa.productid
	 left outer join packagedetail d
	on d.packageid=pa.id
	 left outer join productttype t
	on p.typeid=t.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="productMap">
     select 
	  p.*,pa.id paid ,pa.productid,pa.defaultid,d.id did,t.id tid,t.name tname,t.parentid
	from product p
	 left outer join productpackage pa
	on p.id=pa.productid
	 left outer join packagedetail d
	on d.packageid=pa.id
	 left outer join productttype t
	on p.typeid=t.id
    where p.ID = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from PRODUCT
    where ID = #{id,jdbcType=OTHER}
  </delete>
  <delete id="deleteByExample" parameterType="productExample">
    delete from PRODUCT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="product">
    <selectKey resultType="int" order="BEFORE" keyProperty="id">
    	select seq_monkey.nextval from dual
    </selectKey>
    insert into PRODUCT (ID, NAME, PRICE, STOCK, 
      PICTURE, POINT, SIMPLEDESC, 
      DETIALDESC, TYPEID, STATE
      )
    values (#{id,jdbcType=OTHER}, #{name,jdbcType=OTHER}, #{price,jdbcType=OTHER}, #{stock,jdbcType=OTHER}, 
      #{picture,jdbcType=OTHER}, #{point,jdbcType=OTHER}, #{simpledesc,jdbcType=OTHER}, 
      #{detialdesc,jdbcType=OTHER}, #{typeid,jdbcType=OTHER}, #{state,jdbcType=OTHER}
      )
  </insert>
  <insert id="insertSelective" parameterType="product">
    insert into PRODUCT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="stock != null">
        STOCK,
      </if>
      <if test="picture != null">
        PICTURE,
      </if>
      <if test="point != null">
        POINT,
      </if>
      <if test="simpledesc != null">
        SIMPLEDESC,
      </if>
      <if test="detialdesc != null">
        DETIALDESC,
      </if>
      <if test="typeid != null">
        TYPEID,
      </if>
      <if test="state != null">
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="name != null">
        #{name,jdbcType=OTHER},
      </if>
      <if test="price != null">
        #{price,jdbcType=OTHER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=OTHER},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=OTHER},
      </if>
      <if test="point != null">
        #{point,jdbcType=OTHER},
      </if>
      <if test="simpledesc != null">
        #{simpledesc,jdbcType=OTHER},
      </if>
      <if test="detialdesc != null">
        #{detialdesc,jdbcType=OTHER},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=OTHER},
      </if>
      <if test="state != null">
        #{state,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="productExample" resultType="java.lang.Integer">
    select count(*) from PRODUCT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PRODUCT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=OTHER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=OTHER},
      </if>
      <if test="record.price != null">
        PRICE = #{record.price,jdbcType=OTHER},
      </if>
      <if test="record.stock != null">
        STOCK = #{record.stock,jdbcType=OTHER},
      </if>
      <if test="record.picture != null">
        PICTURE = #{record.picture,jdbcType=OTHER},
      </if>
      <if test="record.point != null">
        POINT = #{record.point,jdbcType=OTHER},
      </if>
      <if test="record.simpledesc != null">
        SIMPLEDESC = #{record.simpledesc,jdbcType=OTHER},
      </if>
      <if test="record.detialdesc != null">
        DETIALDESC = #{record.detialdesc,jdbcType=OTHER},
      </if>
      <if test="record.typeid != null">
        TYPEID = #{record.typeid,jdbcType=OTHER},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PRODUCT
    set ID = #{record.id,jdbcType=OTHER},
      NAME = #{record.name,jdbcType=OTHER},
      PRICE = #{record.price,jdbcType=OTHER},
      STOCK = #{record.stock,jdbcType=OTHER},
      PICTURE = #{record.picture,jdbcType=OTHER},
      POINT = #{record.point,jdbcType=OTHER},
      SIMPLEDESC = #{record.simpledesc,jdbcType=OTHER},
      DETIALDESC = #{record.detialdesc,jdbcType=OTHER},
      TYPEID = #{record.typeid,jdbcType=OTHER},
      STATE = #{record.state,jdbcType=OTHER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="product">
    update PRODUCT
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=OTHER},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=OTHER},
      </if>
      <if test="stock != null">
        STOCK = #{stock,jdbcType=OTHER},
      </if>
      <if test="picture != null">
        PICTURE = #{picture,jdbcType=OTHER},
      </if>
      <if test="point != null">
        POINT = #{point,jdbcType=OTHER},
      </if>
      <if test="simpledesc != null">
        SIMPLEDESC = #{simpledesc,jdbcType=OTHER},
      </if>
      <if test="detialdesc != null">
        DETIALDESC = #{detialdesc,jdbcType=OTHER},
      </if>
      <if test="typeid != null">
        TYPEID = #{typeid,jdbcType=OTHER},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=OTHER},
      </if>
    </set>
    where ID = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="product">
    update PRODUCT
    set NAME = #{name,jdbcType=OTHER},
      PRICE = #{price,jdbcType=OTHER},
      STOCK = #{stock,jdbcType=OTHER},
      PICTURE = #{picture,jdbcType=OTHER},
      POINT = #{point,jdbcType=OTHER},
      SIMPLEDESC = #{simpledesc,jdbcType=OTHER},
      DETIALDESC = #{detialdesc,jdbcType=OTHER},
      TYPEID = #{typeid,jdbcType=OTHER},
      STATE = #{state,jdbcType=OTHER}
    where ID = #{id,jdbcType=OTHER}
  </update>
</mapper>